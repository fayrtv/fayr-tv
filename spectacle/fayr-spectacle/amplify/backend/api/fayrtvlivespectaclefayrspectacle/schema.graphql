type RefractionProtocol @model @auth(rules: [{allow: public}]) {
  id: ID!
  userID: ID! @index(name: "byCustomer")
  data: AWSJSON!
  recordedAt: AWSDateTime!
}

type Customer @model @auth(rules: [{allow: public}]) {
  id: ID!
  ProtocolHistory: [RefractionProtocol] @hasMany(indexName: "byCustomer", fields: ["id"])
  userID: String
  OfStore: Store @hasOne
  encryptedSecret: String
}

type Appointment @model @auth(rules: [{allow: public}]) {
  id: ID!
  User: Customer @hasOne
  beginDate: AWSDateTime!
  AtStore: Store @hasOne
  endDate: AWSDateTime
  message: String
}

type Store @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  city: String!
  owner: String!
  fullAddress: String!
  phoneNumber: String
  adminUserIDs: [String!]!
  publicKey: String
}
 