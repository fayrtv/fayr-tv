type RefractionProtocol @model @auth(rules: [{allow: public}]) {
  id: ID!
  userID: ID! @index(name: "byUser")
  data: AWSJSON!
  recordedAt: AWSDateTime!
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  storeID: ID! @index(name: "byStore")
  ProtocolHistory: [RefractionProtocol] @hasMany(indexName: "byUser", fields: ["id"])
}

type Appointment @model @auth(rules: [{allow: public}]) {
  id: ID!
  User: User @hasOne
  date: AWSDateTime!
  Location: StoreOwner @hasOne
}

type StoreOwner @model @auth(rules: [{allow: public}]) {
  id: ID!
  firstName: String
  lastName: String
}

type Store @model @auth(rules: [{allow: public}]) {
  id: ID!
  AdminUsers: [User] @hasMany(indexName: "byStore", fields: ["id"])
}
 